#BlueJ class context
comment0.target=Town
comment0.text=\n\ Keeps\ information\ about\ a\ town\ and\ its\ eviction\ data,\ in\ a\ certain\ year.\n\n\ @author\ cs230\ staff\ (SK)\n\ @version\ Oct\ 7,\ 2019\n
comment1.params=name\ state\ pop\ povRate\ evictions
comment1.target=Town(java.lang.String,\ java.lang.String,\ int,\ double,\ int)
comment1.text=\n\ constructs\ a\ Town\ object\ given\ its\ name,\ state,\ population,\ poverty\ rate,\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ and\ num\ of\ actual\ evictions\ in\ a\ certain\ year.\n\ \n\ @param\ name\ the\ name\ of\ the\ Town\n\ @param\ state\ the\ state\ this\ town\ belong\ to\ \ \n\ @param\ pop\ the\ population\ of\ the\ town\n\ @param\ povRate\ the\ poverty\ rate\ in\ the\ town\n\ @param\ evictions\ the\ number\ of\ actual\ evictions\ in\ this\ town\ in\ a\ certain\ year\n\ \n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment10.text=\n\ main()\n\ for\ testing\n\ \n
comment2.params=
comment2.target=double\ getEvictionRate()
comment2.text=\n\ returns\ the\ eviction\ rate\ for\ this\ town\n\ \n\ @return\ The\ evictionRate\ for\ this\ town\n
comment3.params=
comment3.target=boolean\ getFlagged()
comment3.text=\n\ \ getter\ to\ return\ whether\ this\ town\ is\ on\ watch\ or\ not\n\ \n\ @return\ true\ if\ this\ town\ should\ be\ on\ watch,\ false\ otherwise\n
comment4.params=
comment4.target=java.lang.String\ getName()
comment4.text=\n\ \ getter\ to\ return\ the\ name\ of\ this\ town\n\ \n\ @return\ the\ name\ of\ this\ town\n
comment5.params=
comment5.target=java.lang.String\ getState()
comment5.text=\n\ \ getter\ to\ return\ the\ satte\ of\ this\ town\n\ \n\ @return\ the\ state\ of\ this\ town\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\n\ returns\ a\ string\ represenation\ of\ this\ Town\ object\n\ \n\ @return\ the\ string\ representation\ of\ this\ object\n
comment7.params=threshold
comment7.target=boolean\ setFlag(double)
comment7.text=\n\ Determines\ whether\ the\ current\ Town\ is\ volnerable,\ based\ on\ the\ input\ threshold,\n\ and\ flags\ it\ accordingly\n\ \n\ @param\ the\ threshold\ used\ to\ determine\ whether\ this\ Town\ is\ volnerable\n\ @return\ true\ if\ this\ town's\ flag\ was\ set\ to\ true,\ false\ otherwise\n
comment8.params=other
comment8.target=int\ compareTo(Town)
comment8.text=\n\ compares\ this\ Town\ to\ the\ inputted\ one.\ The\ comparison\ is\ based\ on\ the\ \n\ eviction\ rates.\ \n\ \n\ returns\ -1,\ 0,\ or\ +1\ if\ this\ Town\ has,\ respectively,\ a\ smaller,\n\ equal\ or\ greater\ evictionRate\ than\ the\ inputted\ one.\ \n\ \n\ @param\ other\ the\ Town\ to\ compare\ to\ this\ Town\n\ \n\ @return\ \ -1\ if\ this\ Town\ has\ smaller\ eviction\ rate\ than\ the\ inputted\ one\n\ \ \ \ \ \ \ \ \ \ +1\ if\ this\ Town\ has\ greater\ eviction\ rate\ than\ the\ inputted\ one\n\ \ \ \ \ \ \ \ \ \ 0\ if\ this\ Town\ has\ the\ same\ eviction\ rate\ as\ the\ inputted\ one\n
comment9.params=other
comment9.target=boolean\ equals(Town)
comment9.text=\n\ Compares\ this\ Town\ to\ the\ inputed\ one\ for\ equality\:\ \n\ Two\ towns\ are\ considered\ equal\ when\ they\ have\ the\ same\ name\ and\n\ belong\ to\ the\ same\ state.\n\ \n\ @param\ other\ the\ Town\ to\ compare\ to\ this\ Town\ for\ equality\n\ \n\ @return\ \ true\ if\ the\ two\ towns\ have\ the\ same\ name\ and\ state,\ \n\ false\ otherwise.\n
numComments=11
